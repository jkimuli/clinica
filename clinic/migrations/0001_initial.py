# Generated by Django 2.1.4 on 2019-01-17 12:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=30, verbose_name='Phone')),
                ('alternate_phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Alternate Phone')),
                ('designation', models.CharField(choices=[('DR', 'Doctor'), ('NR', 'Nurse'), ('LT', 'Laboratory Technician'), ('RR', 'Receptionist')], max_length=2, verbose_name='Designation')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Employees',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=30, verbose_name='Last Name')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Phone')),
                ('dob', models.CharField(blank=True, help_text='Please enter date of birth in format:dd/mm/yy', max_length=30, null=True, verbose_name='Date of Birth')),
                ('age', models.PositiveSmallIntegerField(default=1, verbose_name='Age')),
            ],
            options={
                'verbose_name_plural': 'Patients',
                'ordering': ['first_name'],
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('IN', 'INPATIENT'), ('OUT', 'OUTPATIENT')], max_length=4, verbose_name='Visit Type')),
                ('examination', models.TextField(verbose_name='Physical Examination Carried Out')),
                ('diagnosis', models.TextField(verbose_name='Diagnosis')),
                ('visit_date', models.DateTimeField(auto_now_add=True, verbose_name='Visit Date')),
                ('lab_tests', models.TextField(blank=True, default='None', verbose_name=' Lab Tests Taken')),
                ('prescriptions', models.TextField(blank=True, default='None', verbose_name='Prescriptions Required')),
                ('attendant', models.ForeignKey(default='Unknown Employee', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='visits_handled', to=settings.AUTH_USER_MODEL, verbose_name='Attendant')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_history', to='clinic.Patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name_plural': 'Clinic Visits',
            },
        ),
    ]
